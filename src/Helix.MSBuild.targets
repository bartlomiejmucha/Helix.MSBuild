<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Content Files -->

  <PropertyGroup>
    <PipelineCollectFilesPhaseDependsOn>
      $(PipelineCollectFilesPhaseDependsOn);
      CollectContentFilesFromHelixModules;
    </PipelineCollectFilesPhaseDependsOn>
  </PropertyGroup>

  <Target Name="CollectContentFilesFromHelixModules">
    <MSBuild Projects="@(ProjectReference)" Targets="ContentFilesProjectOutputGroup" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="ContentFilesFromHelixModules" />
    </MSBuild>
    <ItemGroup>
      <ContentFilesFromHelixModules>
        <DestinationRelativePath>%(TargetPath)</DestinationRelativePath>
      </ContentFilesFromHelixModules>
      <FilesForPackagingFromProject Include="@(ContentFilesFromHelixModules)" />
    </ItemGroup>
  </Target>

  <!-- Indirect References -->

  <PropertyGroup>
    <ResolveAssemblyReferencesDependsOn>
      CollectReferencesFromHelixModules;
      $(ResolveAssemblyReferencesDependsOn);
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>

  <Target Name="CollectReferencesFromHelixModules">
    <MSBuild Projects="@(ProjectReference)" Targets="GetReferencesToIncludeInWebRoot" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="ReferencesFromHelixModules" />
    </MSBuild>
    <ItemGroup>
      <ReferencesFromHelixModulesThatAreAlreadyIncluded Include="@(ReferencesFromHelixModules)" Condition="'%(Identity)' != ''and '@(Reference)' != ''"></ReferencesFromHelixModulesThatAreAlreadyIncluded>
      <ReferencesFromHelixModules Remove="@(ReferencesFromHelixModulesThatAreAlreadyIncluded)"/>
      <Reference Include="%(ReferencesFromHelixModules.Identity)">
        <HintPath>%(ReferencesFromHelixModules.HintPath)</HintPath>
      </Reference>
    </ItemGroup>
  </Target>

  <!-- Transform Files -->

  <PropertyGroup>
    <PipelineCollectFilesPhaseDependsOn>
      $(PipelineCollectFilesPhaseDependsOn);
      CollectTransformFilesToApplyOnPublish;
    </PipelineCollectFilesPhaseDependsOn>
  </PropertyGroup>

  <Target Name="CollectTransformFilesToApplyOnPublish">
    <MSBuild Projects="@(ProjectReference)" Targets="GetTransformFilesToApplyOnPublish" BuildInParallel="$(BuildInParallel)">
      <Output TaskParameter="TargetOutputs" ItemName="TransformFilesToApplyOnPublish" />
    </MSBuild>
    <ItemGroup>
      <TransformFilesToApplyOnPublish>
        <TransformFile>%(FullPath)</TransformFile>
        <TransformTargetFileName>%(Filename)</TransformTargetFileName>
        <TransformTargetFileName Condition="$([System.String]::Copy('%(Filename)').EndsWith('.$(Configuration)')) == 'true'">$([System.IO.Path]::GetFileNameWithoutExtension(%(Filename)))</TransformTargetFileName>
      </TransformFilesToApplyOnPublish>
      <TransformFilesToApplyOnPublish>
        <TargetPathToFileToTransform>$([System.IO.Path]::Combine($([System.IO.Path]::GetDirectoryName(%(TargetPath))),%(TransformTargetFileName)))</TargetPathToFileToTransform>
      </TransformFilesToApplyOnPublish>
      <TransformFilesToApplyOnPublish>
        <DestinationFileInPackageDir>$(_PackageTempDir)\%(TargetPathToFileToTransform)</DestinationFileInPackageDir>
        <DestinationFileInPublishDir>$(PublishUrl)\%(TargetPathToFileToTransform)</DestinationFileInPublishDir>
      </TransformFilesToApplyOnPublish>
    </ItemGroup>
    <Message Text="Transform file to apply on publish: %(TransformFilesToApplyOnPublish.TransformFile) %(DestinationFileInPackageDir) %(DestinationFileInPublishDir)" Importance="high" Condition="@(TransformFilesToApplyOnPublish) != ''"/>
    <ItemGroup>
      <FilesToCopyFromPublishDirToPackageDir Include="@(TransformFilesToApplyOnPublish -> '%(DestinationFileInPublishDir)')" Condition="Exists('%(DestinationFileInPublishDir)')">
        <DestinationRelativePath>%(TargetPathToFileToTransform)</DestinationRelativePath>
      </FilesToCopyFromPublishDirToPackageDir>
      <FilesToCopyFromPublishDirToPackageDir Remove="@(FilesToCopyFromPublishDirToPackageDir)" Condition="@(FilesToCopyFromPublishDirToPackageDir) != '' and @(FilesForPackagingFromProject) != '' and %(DestinationRelativePath) != ''"/>
      <FilesForPackagingFromProject Include="@(FilesToCopyFromPublishDirToPackageDir)" />
    </ItemGroup>
    <Message Text="File copied to package dir: %(FilesToCopyFromPublishDirToPackageDir.Identity)" Importance="high" Condition="@(FilesToCopyFromPublishDirToPackageDir) != ''"/>
  </Target>

  <Target Name="ApplyTransformsOnPublish" AfterTargets="ScApplyWebTransforms" DependsOnTargets="CollectTransformFilesToApplyOnPublish">
    <SlowCheetah.TransformTask Source="%(TransformFilesToApplyOnPublish.DestinationFileInPackageDir)" Transform="%(TransformFile)" Destination="%(DestinationFileInPackageDir)" Condition="Exists('%(TransformFile)') and Exists('%(DestinationFileInPackageDir)')" />
    <Message Text="Transformed %(TransformFilesToApplyOnPublish.DestinationFileInPackageDir) using %(TransformFile) into %(DestinationFileInPackageDir)" Importance="high" Condition="Exists('%(TransformFile)') and Exists('%(DestinationFileInPackageDir)')"/>
  </Target>

  <!-- Settings -->

  <ItemGroup>
    <ExcludeFromPackageFiles Include="bin\$(MSBuildProjectName).dll" />
    <ExcludeFromPackageFiles Include="bin\$(MSBuildProjectName).dll.config" />
    <ExcludeFromPackageFiles Include="bin\$(MSBuildProjectName).pdb" />
  </ItemGroup>
  
</Project>